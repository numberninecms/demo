name: Test

on:
    push:
        branches:
            - master
        paths-ignore:
            - '**/README.md'
            - '**/LICENSE'
    pull_request:
        branches:
            - master
        paths-ignore:
            - '**/README.md'
            - '**/LICENSE'

jobs:
    test:
        name: Test project installation

        runs-on: ubuntu-20.04

        strategy:
            matrix:
                php: [ '8.1' ]

        steps:
            -   uses: FranzDiebold/github-env-vars-action@v2

            -   uses: actions/checkout@v2

            -   name: Install yq
                run: sudo snap install yq

            -   name: Setup PHP
                id: setup-php
                uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ matrix.php }}
                    extensions: dom, curl, libxml, mbstring, zip
                    tools: composer:v2
                    coverage: none
                env:
                    COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            -   name: Validate composer.json and composer.lock
                run: composer validate

            -   name: Get composer cache directory
                id: composer-cache
                run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            -   name: Cache dependencies
                uses: actions/cache@v2
                with:
                    path: ${{ steps.composer-cache.outputs.dir }}
                    key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                    restore-keys: ${{ runner.os }}-composer-

            -   name: Create .env.local file
                run: |
                    echo "APP_NAME=demo" > .env.local
                    echo "APP_SECRET=thisisnotreallyasecret" >> .env.local
                    echo "DATABASE_URL=mysql://user:user@mysql:3306/numbernine_app?serverVersion=8.0" >> .env.local
                    echo "REDIS_URL=redis://redis:6379" >> .env.local
                    echo "MAILER_DSN=smtp://maildev:25" >> .env.local
                    rm composer.lock

            -   name: Give Docker container write rights
                run: yq e -I4 -n ".version = \"3.8\" | .services.php.user = \"$(id -u):$(id -g)\"" > docker-compose.override.yml

            -   name: Run Docker containers
                run: docker-compose up -d

            -   name: Install project
                run: make install VERBOSE=1

            -   name: Build assets
                run: |
                    yarn install
                    yarn build

            -   name: Check that website is up and running
                run: wget --spider --no-check-certificate https://demo.localhost:8080/
